clear;

%set data directory
data_dir = '/project/GCRB/Hon_lab/s160875/DropKICK-seq/2016-10-21_combined_analysis/Normalized_data';

%make new directoriesx
mkdir('pvals_ver2');
mkdir('plots_ver2');
mkdir('cpm_ver2');

%set gene index
SMYD3_ind   = [5051 5052];
CD52_ind    = 828;
PIM1_ind    = [16284 16285];
HBG2_ind    = 26941;
HBE1_ind    = 26942;
FADS1_ind   = 27995;
UFD1L_ind   = [47727 47728];
PRKAR2B_ind = 19849;

%set target region names
region_id = {'PIM1.SE2.HS2'};
%region_id = {'PIM1.SE2.HS2',...
%             'PIM1.promoter',...
%             'PIM1.SE1.HS1',...
%             'PIM1.SE1.HS10',...
%             'PIM1.SE1.HS2',...
%             'PIM1.SE1.HS3',...
%             'PIM1.SE1.HS6',...
%             'PIM1.SE1.HS7',...
%             'PIM1.SE1.HS8',...
%             'PIM1.SE1.HS9',...
%             'PIM1.SE2.HS1',...
%             'PIM1.SE2.HS10',...
%             'PIM1.SE2.HS11',...
%             'PIM1.SE2.HS12',...
%             'PIM1.SE2.HS3',...
%             'PIM1.SE2.HS4',...
%             'PIM1.SE2.HS5',...
%             'PIM1.SE2.HS6',...
%             'PIM1.SE2.HS9',...
%             'CD52.promoter',...
%             'CD52.SE1.HS1',...
%             'CD52.SE1.HS2',...
%             'CD52.SE1.HS3',...
%             'CD52.SE2.HS2',...
%             'CD52.SE2.HS3',...
%             'CD52.SE2.HS4',...
%             'CD52.SE2.HS5',...
%             'CD52.SE2.HS6',...
%             'CD52.SE3.HS1',...
%             'CD52.SE3.HS2',...
%             'CD52.SE3.HS4',...
%             'CD52.SE3.HS5',...
%             'CD52.SE3.HS6',...
%             'beta_globin.HBE1_positive_control',...
%             'beta_globin.HBE1.promoter',...
%             'beta_globin.HS2_positive_control',...
%             'beta_globin.SE1.HS1',...
%             'beta_globin.SE1.HS2',...
%             'beta_globin.SE1.HS3',...
%             'beta_globin.SE1.HS4',...
%             'SMYD3.promoter',...
%             'SMYD3.SE2.HS10',...
%             'SMYD3.SE2.HS11',...
%             'SMYD3.SE2.HS12',...
%             'SMYD3.SE2.HS1',...
%             'SMYD3.SE2.HS2',...
%             'SMYD3.SE2.HS3',...
%             'SMYD3.SE2.HS4',...
%             'SMYD3.SE2.HS6',...
%             'SMYD3.SE2.HS7',...
%             'SMYD3.SE2.HS8',...
%             'SMYD3.SE3.HS1',...
%             'SMYD3.SE3.HS3',...
%             'SMYD3.SE3.HS4',...
%             'SMYD3.SE3.HS5',...
%             'SMYD3.SE3.HS6',...
%             'SMYD3.SE3.HS7',...
%             'FADS1.promoter',...
%             'FADS1.SE1.HS1',...
%             'FADS1.SE2.HS1',...
%             'FADS1.SE2.HS2',...
%             'FADS1.SE3.HS3',...
%             'FADS1.SE3.HS3',...
%             'FADS1.SE3.HS4',...
%             'FADS1.SE4.HS1',...
%             'FADS1.SE4.HS2',...
%             'FADS1.SE4.HS3',... 
%             'PRKAR2B.promoter',...
%             'PRKAR2B.SE1.HS1',...
%             'PRKAR2B.SE1.HS2',...
%             'PRKAR2B.SE1.HS3',...
%             'PRKAR2B.SE2.HS1',...
%             'PRKAR2B.SE2.HS2',...
%             'PRKAR2B.SE3.HS1',...
%             'PRKAR2B.SE3.HS2',...
%             'PRKAR2B.SE3.HS4',...
%             'PRKAR2B.SE3.HS5',...
%             'PRKAR2B.SE3.HS8',...
%             'UFD1L.promoter',...
%             'UFD1L.SE1.HS1',...
%             'UFD1L.SE1.HS4',...
%             'Control'};

%load the x-axis and color index for each chromosome
%x_axis_ind   = load ('./ids_xaxis_Manhattan.txt');
color_ind    = load ('./ids_color_vals.txt');

%load the dataset info
%data_set_id = {'RX134', 'RX135', 'RX136'};
data_set_id = {'Batch_A.rep1'};

%identify variables
pval_array  = [];
pval_final  = [];

data        = [];
data_mean   = [];
data_cov    = [];
data_cpm    = [];
data_median = [];

for i=1:length(region_id)
  
  pval_array = [];
  
  for j=1:length(data_set_id)
    
    % load all cell barcodes
    cell_bc_file         = fopen(sprintf('%s/combined.%s/all_sgRNA.uniq.cell_barcodes',data_dir,data_set_id{j}), 'r');
    cell_bc_array        = textscan (cell_bc_file, '%s', 'Delimiter', '\n');
    cell_barcode         = cell_bc_array{1};
    
    % just in time loading of cell data
    if (j > length(data))
      data{j} = load (sprintf('%s/combined.%s/combined.all.uniq.vals.no_header',data_dir,data_set_id{j}));
      [data_mean{j}, data_cov{j}, data_cpm{j}, data_median{j}] = get_mean_cov_ver2(data{j});
    end
    [gene_num, cell_num] = size(data_cpm{j});
    
    % check if the size of the barcode matches the size of the matrix
    if (cell_num ~= length(cell_barcode))
      error ('Error. \nThe cell barcode number does not match the matrix size')
    end
    
    search_string = sprintf('%s/combined_%s/%s.*.cell.barcodes',data_dir,data_set_id{j},region_id{i});
    sgRNA_files = dir(search_string);
    
    for sgRNA_file = sgRNA_files'
      fprintf('region = %s, dataset = %s, sgRNA = %s\n', region_id{i}, data_set_id{j}, sgRNA_file.name);
      
      % load sgRNA data
      full_name             = sprintf('%s/combined_%s/%s',data_dir,data_set_id{j},sgRNA_file.name);0
      sgRNA_pos_file        = fopen(full_name,'r');
      sgRNA_pos_cell_array  = textscan (sgRNA_pos_file, '%s', 'Delimiter','\n');
      sgRNA_pos_barcode     = sgRNA_pos_cell_array{1};
      index_sgRNA           = get_cell_barcode_index(cell_barcode, sgRNA_pos_barcode);

      merged_sgRNA          = sum(data_cpm{j}(:, index_sgRNA), 2);
      merged_sgRNA_sum      = sum(merged_sgRNA);
      
      % load data within the current region
%      region_array          = strsplit(region_id{i},'.');
%      region_file_name      = sprintf('%s/combined_%s/%s.cell_barcodes',data_dir,data_set_id{j},region_array{1});
%      region_file           = fopen(region_file_name, 'r');
%      region_cell_array     = textscan (region_file, '%s', 'Delimiter','\n');
%      region_barcode        = region_cell_array{1};
%      index_region          = get_cell_barcode_index(cell_barcode, region_barcode);
     
      % get the barcode index beyond the current region
%      index_all_cells       = 1:cell_num;
%      index_non_region      = setdiff(index_all_cells, index_region);
%      merged_non_region     = sum(data_cpm{j}(:, index_non_region), 2);
%      merged_non_region_sum = sum(merged_non_region);
      
      pval                  = [];
      merged_sgRNA_cpm      = [];
      merged_non_sgRNA_cpm  = [];
      log2ratio             = [];
      for k = 1:gene_num-1   % less one to remove virus gene
        
        current_median = data_median{j}(k);
        
        low_cell_ind  = find(data_cpm{j}(k, :) <= current_median);
        overlap_count = length(intersect(cell_barcode(low_cell_ind), sgRNA_pos_barcode));
        current_pval  = hygecdf(overlap_count - 1,...
                                cell_num,...
                                length(sgRNA_pos_barcode),...
                                length(low_cell_ind),...
                                'upper');
        pval(k) = current_pval;

        merged_sgRNA_cpm(k)      = (merged_sgRNA(k)+1)      / (merged_sgRNA_sum     / 1000000);
        merged_non_region_cpm(k) = (merged_non_region(k)+1) / (merged_non_region_sum / 1000000);
%        merged_cpm(k)            = ()
        log2ratio(k)             = log2(merged_sgRNA_cpm(k) / merged_non_region_cpm(k));

      end
      
      next_index = size(pval_array,2)+1;
      pval_array(:, next_index) = pval;

      out_file = sprintf('pvals_ver2/pvals.%s.txt', sgRNA_file.name);
      dlmwrite(out_file, pval', '\t')
      out_file = sprintf('cpm_ver2/non_region_cpm.%s.txt', sgRNA_file.name);
      dlmwrite(out_file, merged_non_region_cpm', '\t')
      out_file = sprintf('cpm_ver2/sgRNA_cpm.%s.txt', sgRNA_file.name);
      dlmwrite(out_file, merged_sgRNA_cpm', '\t')
      out_file = sprintf('cpm_ver2/log2ratio.%s.txt', sgRNA_file.name);
      dlmwrite(out_file, log2ratio', '\t')

    end
  end
%  pval_final = pval_array{1};
%% write combined p-value
%  for array_ind = 2:length(pval_array)
%    pval_final = pval_final .* pval_array{array_ind};
%  end
  
  [num_genes,num_sgRNAs] = size(pval_array);
  
  p_log      = -2*log(pval_array);
  p_sum      = sum(p_log, 2);
  p_chi2     = chi2cdf(p_sum, 2*num_sgRNAs, 'upper');
  p_fdr      = mafdr(p_chi2, 'BHFDR', 'true');
  pval_final = p_val;

  %write p-value, cpm and log2fc of each sgRNA
  out_file   = sprintf('pvals_ver2/pvals.%s.combined.txt', region_id{i});
  dlmwrite(out_file, pval_final', '\t')
  
      
  scatter(x_axis_ind(find(color_ind == 1)) ,-log10(pval_final(find(color_ind == 1))), 30,...
          'MarkerFaceColor',[0.6 0.6 0.6],...
          'MarkerEdgeAlpha',0);
  
  hold on;
  
  scatter(x_axis_ind(find(color_ind == 2)) ,-log10(pval_final(find(color_ind == 2))), 30,...
          'MarkerFaceColor',[0.4 0.4 0.4],...
          'MarkerEdgeAlpha',0);

  xlim([-1000 63000]);
  ylim([0 10]);
  set (gca, 'XTick', []);
  
  scatter(x_axis_ind(PIM1_ind), -log10(pval_final(PIM1_ind)), 40,...
          'MarkerFaceColor',[1 0 0],...
          'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(SMYD3_ind),-log10(pval_final(SMYD3_ind)), 40,...
          'MarkerFaceColor',[0 1 0],...
            'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(HBG2_ind), -log10(pval_final(HBG2_ind)), 40,...
          'MarkerFaceColor',[0 0 1],...
          'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(HBE1_ind), -log10(pval_final(HBE1_ind)), 40,...
          'MarkerFaceColor',[0.5 0 1],...
            'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(CD52_ind), -log10(pval_final(CD52_ind)), 40,...
          'MarkerFaceColor',[1 1 0],...
          'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(FADS1_ind),-log10(pval_final(FADS1_ind)), 40,...
          'MarkerFaceColor',[1 0.5 1],...
          'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(UFD1L_ind),-log10(pval_final(UFD1L_ind)), 40,...
          'MarkerFaceColor',[1 0.5 0],...
          'MarkerEdgeAlpha', 0);
  
  scatter(x_axis_ind(PRKAR2B_ind),-log10(pval_final(PRKAR2B_ind)), 40,...
            'MarkerFaceColor',[0 0.5 0.8],...
          'MarkerEdgeAlpha', 0);
  
  legend('Others','Others','PIM1','SMYD3','HBG2','HBE1', 'CD52','FADS1', ...
         'UFD1L','PRKAR2B', 'Location', 'eastoutside');
  hold off;
    
  out_file = sprintf('./plots_ver2/Manhattan_plot.%s.p_chi2_production.tiff', region_id{i});
  print (gcf, out_file, '-r600', '-dtiff');
  
end
