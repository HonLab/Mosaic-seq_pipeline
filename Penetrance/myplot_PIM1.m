clear;

setup_and_load_constants;

all_gene_ind = [PIM1_ind GAPDH_ind];
gene_names = {'PIM1', 'GAPDH'};

regions = {'PIM1.SE2.HS2',...
           'PIM1.promoter.sgRNA1',...
           'PIM1.SE1.HS10',...
           'PIM1.SE1.HS1',...
           'PIM1.SE1.HS2',...
           'PIM1.SE1.HS3',...
           'PIM1.SE1.HS6',...
           'PIM1.SE1.HS7',...
           'PIM1.SE1.HS8',...
           'PIM1.SE1.HS9',...
           'PIM1.SE2.HS10',...
           'PIM1.SE2.HS11',...
           'PIM1.SE2.HS12',...
           'PIM1.SE2.HS1',...
           'PIM1.SE2.HS3',...
           'PIM1.SE2.HS4',...
           'PIM1.SE2.HS5',...
           'PIM1.SE2.HS6',...
           'PIM1.SE2.HS9'};

num_rand    = 100;
experiments = {'Batch_A', 'Batch_B', 'Batch_C'};
prefix      = '../../../gsea_model/KRAB.final/step1.data/Normalized_data';

% load all data
[data_norm, cell_barcodes] = load_all_expr(prefix, experiments);

for region_ind = 1:length(regions)
  region = regions{region_ind};

  for experiment_ind = 1:length(experiments)
    experiment = experiments{experiment_ind};

    for gene_i = 1:length(all_gene_ind)
      gene_ind = all_gene_ind(gene_i);

      % get list of sgRNAs
      all_sgRNAs = get_sgRNAs(experiment, region, prefix);
      for sgRNA_ind = 1:length(all_sgRNAs)
        sgRNA = all_sgRNAs{sgRNA_ind};
        fprintf('region = %s, experiment = %s, gene = %s, sgRNA = %s\n',...
                region, experiment, gene_names{gene_i}, sgRNA);

        % get all cell barcodes for the given sgRNA
        sgRNA_cell_barcodes = load_sgRNA_cell_barcodes(experiment, prefix, region, sgRNA);
        if (length(sgRNA_cell_barcodes) == 0)
          continue;
        end

        description = sprintf('%s.%s.%s.%s.n=%d',...
                              region, experiment, sgRNA, gene_names{gene_i},...
                              length(sgRNA_cell_barcodes));
        generative_model(cell_barcodes{experiment_ind},...
                         data_norm{experiment_ind},...
                         sgRNA_cell_barcodes,...
                         gene_ind,...
                         num_rand,...
                         description);
      end
    end
  end
end
